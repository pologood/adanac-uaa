<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="query">

	<sql id="find_authorization">
		<![CDATA[
    	   SELECT 
    	    	a.ID as id,
    	    	a.SYSTEM_ID as systemId,
    	    	a.TYPE as type,
    	    	a.RESOURCES as "resource",
    	    	a.DESCRIPTION as description,
    	    	a.TREE_PARENT_ID as treeParentId,
    	    	a.ORDER_NUMBER as orderNumber,
    	    	a.url as url
    	   FROM
    	    	UAA_II_AUTHORIZATION a
    	   WHERE 1=1 
           <#if authId?exists && authId!=""> 
                and id = :authId  
           </#if>
           <#if typeId?exists && typeId!="">
           		and type=:typeId
           </#if>
           <#if systemId?exists && systemId!="">
           		and a.SYSTEM_ID=:systemId
           </#if>
    	]]>
	</sql>
	<sql id="find_authorization_by_collectionId">
		<![CDATA[
    	   SELECT 
    	    	a.ID as id,
    	    	a.SYSTEM_ID as systemId,
    	    	a.TYPE as type,
    	    	a.RESOURCES as "resource",
    	    	a.DESCRIPTION as description
    	   FROM 
    	    	UAA_II_AUTHORIZATION a,
    	    	UAA_II_AUTH_COLLECTION_MAPPING b 
    	   WHERE
    	   		a.ID=b.AUTH_ID AND b.COLLECTION_ID=:collectionId
    	]]>
	</sql>

	<sql id="find_authorization_collection">
		<![CDATA[
    	   SELECT 
    	    	a.ID as id,
    	    	a.SYSTEM_ID as systemId,
    	    	a.NAME as name,
    	    	a.DESCRIPTION as description
    	   FROM 
    	    	UAA_II_AUTH_COLLECTION a
    	   WHERE 1=1 
           <#if collectionId?exists && collectionId!=""> 
                and id = :collectionId  
           </#if>
           <#if systemId?exists && systemId!=""> 
                and a.SYSTEM_ID = :systemId  
           </#if>
    	]]>
	</sql>
	<sql id="find_autcollection_by_authId">
		<![CDATA[
    	   SELECT 
    	    	a.ID as id,
    	    	a.SYSTEM_ID as systemId,
    	    	a.NAME as name,
    	    	a.DESCRIPTION as description
    	   FROM 
    	    	UAA_II_AUTH_COLLECTION a,
    	    	UAA_II_AUTH_COLLECTION_MAPPING b
    	   WHERE
    	   		a.ID=b.COLLECTION_ID AND b.AUTH_ID=:authId
    	]]>
	</sql>

	<sql id="list_parent_collection">
   		<![CDATA[
   			SELECT
   				b.ID as id,
   				b.SYSTEM_ID as systemId,
   				b.NAME as name,
   				b.DESCRIPTION as description
   			FROM
   				UAA_II_COLLECTION_MAPPING a,UAA_II_AUTH_COLLECTION b
   			WHERE
   				a.COLLECTION_ID=:appertainedCollectionId and a.CONTAINED_COLLECTION_ID=b.ID
   		]]>
	</sql>
	<sql id="list_child_collection">
   		<![CDATA[
   			SELECT
   				b.ID as id,
   				b.SYSTEM_ID as systemId,
   				b.NAME as name,
   				b.DESCRIPTION as description
   			FROM
   				UAA_II_COLLECTION_MAPPING a,UAA_II_AUTH_COLLECTION b
   			WHERE
   				a.CONTAINED_COLLECTION_ID=:containedCollectionId and a.COLLECTION_ID=b.ID
   		]]>
	</sql>
	<sql id="list_collection_mappings">
   		<![CDATA[
   			SELECT
   				a.ID as id,
   				a.COLLECTION_ID as collectionId,
   				a.CONTAINED_COLLECTION_ID as containedCollectionId
   			FROM
   				UAA_II_COLLECTION_MAPPING a
   		]]>
	</sql>
	<sql id="count_authorization_collection_mapping">
   		<![CDATA[
   			SELECT COUNT(1) AS count FROM UAA_II_AUTH_COLLECTION_MAPPING WHERE AUTH_ID=:authId AND COLLECTION_ID=:collectionId
   		]]>
	</sql>
	<sql id="list_authorization_collection_mapping">
   		<![CDATA[
   			SELECT
   				a.ID as id,
   				a.AUTH_ID as authorizationId,
   				a.COLLECTION_ID as collectionId
   			FROM
   				UAA_II_AUTH_COLLECTION_MAPPING a
   		]]>
	</sql>

	<sql id="find_system">
 		<![CDATA[
 			SELECT
 				a.ID as id,
 				a.NAME as name,
 				a.DESCRIPTION as description
 			FROM UAA_II_SYSTEM a
 			WHERE 1=1
 				<#if systemId?exists && systemId!="">
 					and UPPER(id)=UPPER(:systemId)
 				</#if>
 		]]>
	</sql>
	<sql id="find_type">
   		<![CDATA[
   			SELECT
 				a.CODE as code,
 				a.DESCRIPTION as description
 			FROM UAA_II_AUTH_TYPE a
 			WHERE 1=1
 				<#if code?exists && code!="">
 					and UPPER(code)=UPPER(:code)
 				</#if>
   		]]>
	</sql>

	<sql id="find_role_by_id">
    	<![CDATA[
    	    SELECT 
            	a.CODE AS code, 
            	a.NAME AS name, 
            	a.STATUS AS status,
            	a.DESCRIPTION AS description
            FROM UAA_II_ROLE a
            	WHERE UPPER(a.CODE)=UPPER(:code)
    	]]>
	</sql>
	<sql id="list_role">
    	<![CDATA[
    	    SELECT 
            	a.CODE AS code, 
            	a.NAME AS name, 
            	a.STATUS AS status,
            	a.DESCRIPTION AS description
            FROM UAA_II_ROLE a
    	]]>
	</sql>
	<sql id="list_parent_role">
    	<![CDATA[
    	    SELECT 
            	b.CODE AS code, 
            	b.NAME AS name, 
            	b.STATUS AS status,
            	b.DESCRIPTION AS description
            FROM UAA_II_ROLE_PARENTS a ,UAA_II_ROLE b
            WHERE UPPER(a.ROLE_CODE)=UPPER(:childRoleId)
            	AND UPPER(a.ROLE_PARENT)=UPPER(b.CODE)
    	]]>
	</sql>
	<sql id="list_child_role">
    	<![CDATA[
    	    SELECT 
            	b.CODE AS code, 
            	b.NAME AS name, 
            	b.STATUS AS status,
            	b.DESCRIPTION AS description
            FROM UAA_II_ROLE_PARENTS a ,UAA_II_ROLE b
            WHERE UPPER(a.ROLE_PARENT)=UPPER(:parentRoleId)
            	AND UPPER(a.ROLE_CODE)=UPPER(b.CODE)
    	]]>
	</sql>
	<sql id="list_role_mappings">
    	<![CDATA[
    	    SELECT
    	    	ID AS id, 
            	ROLE_CODE AS roleCode,  
            	ROLE_PARENT AS parentroleCode
            FROM UAA_II_ROLE_PARENTS 
    	]]>
	</sql>

	<sql id="find_role_collectionMapping">
    	<![CDATA[
    	    SELECT 
            	a.ID AS id, 
            	a.ROLE_CODE AS roleCode, 
            	a.AUTHCOLLECTION_ID AS collectionId,
            	a.MAPPING_TYPE AS mappingType
            FROM UAA_II_ROLE_AUTHCTION_MAPPING a
            WHERE UPPER(a.ROLE_CODE)=UPPER(:roleCode)
            	AND AUTHCOLLECTION_ID=:authcollectionId 
            	AND UPPER(MAPPING_TYPE)=UPPER(:mappingType)
    	]]>
	</sql>
	<sql id="list_role_collectionMapping">
    	<![CDATA[
    	    SELECT 
            	a.ID AS id, 
            	a.ROLE_CODE AS roleCode, 
            	a.AUTHCOLLECTION_ID AS collectionId,
            	a.MAPPING_TYPE AS mappingType
            FROM UAA_II_ROLE_AUTHCTION_MAPPING a
    	]]>
	</sql>
	<sql id="list_roles_by_collection_and_type">
    	<![CDATA[
    	    SELECT 
            	b.CODE AS code, 
            	b.NAME AS name, 
            	b.STATUS AS status,
            	b.DESCRIPTION AS description
            FROM UAA_II_ROLE_AUTHCTION_MAPPING a ,UAA_II_ROLE b
            WHERE AUTHCOLLECTION_ID=:authcollectionId 
            	AND UPPER(MAPPING_TYPE)=UPPER(:mappingType)
            	AND UPPER(a.ROLE_CODE)=UPPER(b.CODE)
    	]]>
	</sql>
	<sql id="list_collection_by_role">
   		<![CDATA[
   			SELECT
   				b.ID as id,
   				b.SYSTEM_ID as systemId,
   				b.NAME as name,
   				b.DESCRIPTION as description
   			FROM
   				UAA_II_ROLE_AUTHCTION_MAPPING a,UAA_II_AUTH_COLLECTION b
   			WHERE UPPER(a.ROLE_CODE)=UPPER(:roleCode) 
   				AND UPPER(a.AUTHCOLLECTION_ID)=UPPER(b.ID)
   				AND UPPER(a.MAPPING_TYPE)='C'
   		]]>
	</sql>
	<sql id="list_authorizations_by_role">
   		<![CDATA[
   			SELECT
   				b.ID as id,
   				b.SYSTEM_ID as systemId,
   				b.TYPE as type,
   				b.RESOURCE as "resource",
   				b.DESCRIPTION as description
   			FROM
   				UAA_II_ROLE_AUTHCTION_MAPPING a,UAA_II_AUTHORIZATION b
   			WHERE UPPER(a.ROLE_CODE)=UPPER(:roleCode) 
   				AND UPPER(a.AUTHCOLLECTION_ID)=UPPER(b.ID)
   				AND UPPER(a.MAPPING_TYPE)='A'
   		]]>
	</sql>

	<sql id="list_role_by_user">
    	<![CDATA[
    	    SELECT 
            	b.CODE as code, 
            	b.NAME as name, 
            	b.DESCRIPTION as description, 
            	b.STATUS as status 
            FROM 
            	UAA_II_USER_ROLE_MAPPING a,UAA_II_ROLE b
            WHERE UPPER(a.USER_IDENTITY)=UPPER(:userIdentity)
            	AND UPPER(a.IDENTITY_TYPE)=UPPER(:identityType)
            	AND UPPER(a.ROLE_CODE)=UPPER(b.CODE)
    	]]>
	</sql>
	<sql id="list_role_user">
    	<![CDATA[
    	    SELECT
    	    	ID as id,
    	    	USER_IDENTITY as userIdentity,
            	IDENTITY_TYPE as identityType,  
            	ROLE_CODE as roleCode
            FROM UAA_II_USER_ROLE_MAPPING 
    	]]>
	</sql>




	<sql id="find_treeNode_by_sytemId">
		<![CDATA[
			select
			auth.ID as id , auth.SYSTEM_ID as systemId, auth.url as url,
			auth.TYPE, auth.RESOURCES as  "resource", auth.DESCRIPTION as name,
			auth.TREE_PARENT_ID as parentId, auth.ORDER_NUMBER as orderNumber,
			auth.SELF_MENU as selfMenu
			from uaa_ii_authorization auth
			where SYSTEM_ID = :systemId and type='TREE_NODE'
    	]]>
	</sql>



	<sql id="find_treeNodeByTreeNodeId">
		<![CDATA[
    	  	select id , menu.name , menu.TREE_DESC as treeDesc,
					url   , parent_id as  parentId, menu.order_number as orderNumber   ,
					system_id as systemId , authorization_id as  authorizationId
			from uaa_ii_menu menu
    	   WHERE 1=1
           <#if treeId?exists && treeId!="">
                and id = :treeId
           </#if>
    	]]>
	</sql>

	<sql id="find_authorization_tree_by_id">
		<![CDATA[
			select
			auth.ID as id , auth.SYSTEM_ID as systemId, auth.url as url,
			auth.TYPE, auth.RESOURCES as "resource", auth.DESCRIPTION as name,
			auth.TREE_PARENT_ID as parentId, auth.ORDER_NUMBER as orderNumber
			from uaa_ii_authorization auth
			where FIND_IN_SET(id, queryChildrenAuthorizationIds(:id)) and TYPE='TREE_NODE'
    	]]>
	</sql>

	<sql id="find_department">
		<![CDATA[
			SELECT uaa.id, uaa.`name`, uaa.parent_id parentId
			FROM uaa_ii_department uaa
			 WHERE 1=1
           <#if id?exists && id!="">
                and id = :id
           </#if>
           <#if name?exists && name!="">
           		and name=:name
           </#if>
           <#if parentId?exists && parentId!="">
           		and a.parent_id=:parentId
           </#if>
    	]]>
	</sql>
	<sql id="find_ChildrenAndSelfDepartment">
		<![CDATA[
			SELECT uaa.id, uaa.`name`, uaa.parent_id parentId
			FROM uaa_ii_department uaa
			where FIND_IN_SET(id, queryChildrenDepartmentIds(:id))
    	]]>
	</sql>


	<sql id="find_user">
		<![CDATA[
    	  	select ui.id, ui.user_id userId,ui.password, ui.department_id departmentId, ui.nick_name nickName, up.`name` departmentName
			from uaa_ii_user_info ui left join uaa_ii_department up on ui.department_id = up.id
			where 1=1
		   <#if id?exists && id!="">
					and ui.id =:id
		   </#if>
           <#if userId?exists && userId!="">
                and ui.user_id = :userId
           </#if>
		   <#if departmentId?exists && departmentId!="">
                and ui.department_id = :departmentId
           </#if>
		   <#if nickName?exists && nickName!="">
                and ui.nick_name = :nickName
           </#if>
		   <#if departmentName?exists && departmentName!="">
                and ui.department_name = :departmentName
           </#if>
    	]]>
	</sql>
	<sql id="find_all_roles_user_mapping">
		<![CDATA[
             SELECT
                  a.ID as id,
				  a.USER_IDENTITY as userIdentity,
				  a.IDENTITY_TYPE as identityType,
				  a.ROLE_CODE as roleCode,
				  a.department_id as departmentId
             FROM
                  UAA_II_USER_ROLE_MAPPING a
             WHERE 1=1
              	  <#if userIdentity?exists && userIdentity!="">
                   	   and a.USER_IDENTITY =:userIdentity
              	  </#if>
				  <#if identityType?exists && identityType!="">
                   	   and a.IDENTITY_TYPE =:identityType
              	  </#if>
              	  <#if roleCode?exists && roleCode!="">
                   	   and UPPER(a.ROLE_CODE) like UPPER(CONCAT('%',:roleCode,'%'))
              	  </#if>
              	   <#if departmentId?exists && departmentId!="">
                   	   and a.department_id=:departmentId
              	  </#if>
			   ORDER BY a.ID
		]]>
	</sql>


</sqlMap>